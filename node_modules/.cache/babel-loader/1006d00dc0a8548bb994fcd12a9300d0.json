{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jails\\\\Documents\\\\PAReact\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React from 'react'; //import { Link } from 'react-router-dom';\n\nimport { auction_api, user_api } from '../../services/api';\nimport './styles.css';\nimport * as signalR from '@aspnet/signalr'; //import { bindExpression } from '@babel/types';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auctions: [],\n      userId: 0,\n      userName: \"\"\n    };\n    this.bid = this.bid.bind(this);\n  }\n\n  componentDidMount() {\n    let id = window.prompt('Please! Your user id:', 0);\n    this.setState({\n      userId: id\n    });\n    user_api.get('/api/User/' + parseInt(id)).then(res => {\n      const user = res.data;\n      this.setState({\n        userName: user.name\n      });\n    });\n    auction_api.get('/api/Auction?tenantId=1').then(res => {\n      const aucts = res.data;\n      this.setState({\n        auctions: aucts\n      });\n    });\n    let connection = null;\n    const protocol = new signalR.JsonHubProtocol();\n    const transport = signalR.HttpTransportType.WebSockets;\n    const options = {\n      transport,\n      logMessageContent: true,\n      logger: signalR.LogLevel.Trace\n    }; // create the connection instance\n\n    connection = new signalR.HubConnectionBuilder().withUrl('https://localhost:5007/signalr', options) //https://localhost:5007 44367\n    .withHubProtocol(protocol).build();\n    connection.on('ReceiveTime', (auctionId, time) => {\n      let auction = this.state.auctions.find(function (element) {\n        return element.id === auctionId;\n      });\n      auction.stopwatchTime = time;\n      this.forceUpdate();\n    });\n    connection.start().then(() => console.info('SignalR Connected')).catch(err => console.error('SignalR Connection Error: ', err));\n  }\n\n  async bid(auctionId) {\n    try {\n      let response = await auction_api.post('/api/Auction/' + auctionId + '/bid?tenantId=3', {\n        'UserId': parseInt(this.state.userId),\n        'AuctionProductId': auctionId\n      });\n      console.log('ðŸ‘‰ Returned data:', response);\n    } catch (e) {\n      console.log(\"\\uD83D\\uDE31 Axios bid request failed: \".concat(e));\n      alert(e.response.data);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n      className: \"spot-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"OlÃ¡: \" + this.state.userName), this.state.auctions.map(auction => React.createElement(\"li\", {\n      key: auction.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: {\n        backgroundImage: \"url(\".concat(auction.urlImg, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, auction.description), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Data Abertura: \" + auction.openingDate), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"PreÃ§o MÃ­nimo: \" + auction.minValue ? \"R$ \".concat(auction.minValue / 100) : 'Sem preÃ§o mÃ­nimo'), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Timer: \" + auction.stopwatchTime), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.bid.bind(this, auction.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Bid\")))));\n  }\n\n}\n/* */","map":{"version":3,"sources":["C:/Users/jails/Documents/PAReact/src/pages/Dashboard/index.js"],"names":["React","auction_api","user_api","signalR","Dashboard","Component","constructor","props","state","auctions","userId","userName","bid","bind","componentDidMount","id","window","prompt","setState","get","parseInt","then","res","user","data","name","aucts","connection","protocol","JsonHubProtocol","transport","HttpTransportType","WebSockets","options","logMessageContent","logger","LogLevel","Trace","HubConnectionBuilder","withUrl","withHubProtocol","build","on","auctionId","time","auction","find","element","stopwatchTime","forceUpdate","start","console","info","catch","err","error","response","post","log","e","alert","render","map","backgroundImage","urlImg","description","openingDate","minValue"],"mappings":"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","sourcesContent":["import React  from 'react';\n//import { Link } from 'react-router-dom';\nimport {auction_api, user_api} from '../../services/api'\nimport './styles.css';\nimport * as signalR from '@aspnet/signalr'\n//import { bindExpression } from '@babel/types';\n\n\nexport default class Dashboard extends React.Component {\n    \n    constructor (props){\n        super(props);\n        this.state = {auctions: [], userId: 0, userName: \"\"};\n        this.bid = this.bid.bind(this);\n    }\n\n    componentDidMount(){\n        \n        let id = window.prompt('Please! Your user id:', 0);    \n        this.setState({userId: id});\n\n        user_api.get('/api/User/'+parseInt(id))\n        .then(res => {\n            const user = res.data;\n            this.setState({userName: user.name});\n        });\n\n        auction_api.get('/api/Auction?tenantId=1')\n        .then(res => {\n            const aucts = res.data;\n            this.setState({auctions: aucts});\n        })\n\n        let connection = null;\n        const protocol = new signalR.JsonHubProtocol();\n        const transport = signalR.HttpTransportType.WebSockets;\n\n        const options = {\n            transport,\n            logMessageContent: true,\n            logger: signalR.LogLevel.Trace\n        };\n\n        // create the connection instance\n        connection = new signalR.HubConnectionBuilder()\n        .withUrl('https://localhost:5007/signalr', options)//https://localhost:5007 44367\n        .withHubProtocol(protocol)\n        .build();\n\n        connection.on('ReceiveTime',(auctionId, time) => {\n           let auction = this.state.auctions.find(function(element){\n               return element.id === auctionId;\n           });\n           auction.stopwatchTime = time;\n           this.forceUpdate();\n        \n        });\n        \n        connection.start()\n        .then(() => console.info('SignalR Connected'))\n        .catch(err => console.error('SignalR Connection Error: ', err));\n\n    }\n    \n    async bid(auctionId) {\n        try {\n           let response = await auction_api.post('/api/Auction/'+auctionId+'/bid?tenantId=3', { 'UserId': parseInt(this.state.userId), 'AuctionProductId': auctionId  });\n            console.log('ðŸ‘‰ Returned data:', response);\n          } catch (e) {\n            console.log(`ðŸ˜± Axios bid request failed: ${e}`);\n            alert(e.response.data);\n          }\n    }\n\n   render(){     \n    return (\n            <>\n                <ul className=\"spot-list\">\n                    <h2>{\"OlÃ¡: \"+this.state.userName}</h2>\n                    {this.state.auctions.map(auction => (\n                        <li key={auction.id}>\n                            <header style={{ backgroundImage: `url(${auction.urlImg})` }}> </header>   \n                            <span>{auction.description}</span> \n                            <span>{\"Data Abertura: \"+auction.openingDate}</span>\n                            <span>{\"PreÃ§o MÃ­nimo: \"+auction.minValue ? `R$ ${auction.minValue/100}` : 'Sem preÃ§o mÃ­nimo' }</span>\n                            <span>{\"Timer: \"+auction.stopwatchTime}</span>\n                            <button className=\"btn\" onClick={this.bid.bind(this, auction.id)}>Bid</button>\n                        </li> \n                    ))}\n                </ul>\n\n            </>\n        )\n    }\n}\n\n/* */"]},"metadata":{},"sourceType":"module"}